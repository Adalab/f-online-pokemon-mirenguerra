{"version":3,"sources":["images/arrow.svg","images/back-arrow.svg","services/getListService.js","services/getPokemonsService.js","services/getEvolutionService.js","components/Filter/index.js","components/Card/index.js","components/List/index.js","components/Home/index.js","components/PokemonPage/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","getList","fetch","concat","then","res","json","getPokemons","url","response","getEvolution","Filter","props","pokemonByName","handleChangeFilterByName","react_default","a","createElement","className","htmlFor","type","name","id","placeholder","value","onChange","Card","imageSrc","types","evolvesFrom","src","alt","map","item","key","toUpperCase","List","pokemons","filter","includes","react_router_dom","to","components_Card","sprites","front_default","Home","loading","components_Filter","components_List","changeUnits","x","PokemonPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","evolutionDetails","fetchEvolution","_this2","selectedPokemon","evolutionUrl","data","evolutionPokemons","chain","species","evo2","evo1","evolves_to","length","push","setState","_this$props","pokeAbilities","abilities","ability","Fragment","height","weight","substring","arrow","backArrow","React","Component","App","bind","assertThisInitialized","fetchList","pokemonData","results","pokemon","pokemonDetail","evolves","evolves_from_species","evolutionChain","evolution_chain","Promise","all","responses","event","currentTarget","_this3","_this$state","react_router","exact","path","render","components_Home","routerProps","components_PokemonPage","find","parseInt","match","params","pokemonId","ReactDOM","components_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yWCKzBC,SAHC,WACd,OAAOC,MAAK,GAAAC,OAHF,qCAGE,cAAoBC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,WCAnCC,EAHK,SAAAC,GAClB,OAAON,MAAMM,GAAKJ,KAAK,SAAAK,GAAQ,OAAIA,EAASH,UCE/BI,EAHM,SAAAF,GACnB,OAAON,MAAMM,GAAKJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UC4BrBK,eAzBA,SAAAC,GAAS,IACdC,EAA4CD,EAA5CC,cAAeC,EAA6BF,EAA7BE,yBACvB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAASD,UAAU,iBAAlC,eAGAH,EAAAC,EAAAC,cAAA,SACEC,UAAU,gBACVE,KAAK,OACLC,KAAK,SACLC,GAAG,SACHC,YAAY,gCACZC,MAAOX,EACPY,SAAUX,OCsBHY,eApCF,SAAAd,GAAS,IACZe,EAA2Cf,EAA3Ce,SAAUN,EAAiCT,EAAjCS,KAAMC,EAA2BV,EAA3BU,GAAIM,EAAuBhB,EAAvBgB,MAAOC,EAAgBjB,EAAhBiB,YACnC,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcY,IAAKH,EAAUI,IAAKV,IACjDN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,QAA8BI,IAEhCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcG,GAC5BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACCW,EAAMI,IAAI,SAAAC,GACT,OACElB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBgB,IAAKD,EAAKb,KAAKC,MAC7CY,EAAKb,KAAKC,KAAKc,mBAMxBpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BW,OCWjCO,EA/BF,SAAAxB,GAAS,IACZyB,EAA4BzB,EAA5ByB,SAAUxB,EAAkBD,EAAlBC,cAClB,OACEE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACXmB,EACEC,OAAO,SAAAL,GAAI,OAAIA,EAAKZ,KAAKkB,SAAS1B,KAClCmB,IAAI,SAAAC,GAAQ,IACHX,EAAiCW,EAAjCX,GAAID,EAA6BY,EAA7BZ,KAAMO,EAAuBK,EAAvBL,MAAOC,EAAgBI,EAAhBJ,YACzB,OACEd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAagB,IAAKZ,GAC9BP,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAE,YAAAtC,OAAcmB,IACtBP,EAAAC,EAAAC,cAACyB,EAAD,CACErB,KAAMA,EACNC,GAAIA,EACJK,SAAUM,EAAKU,QAAQC,cACvBhB,MAAOA,EACPC,YAAaA,UCOdgB,EAvBF,SAAAjC,GAAS,IACZC,EAA+DD,EAA/DC,cAAeC,EAAgDF,EAAhDE,yBAA0BuB,EAAsBzB,EAAtByB,SAAUS,EAAYlC,EAAZkC,QAC3D,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC8B,EAAD,CACElC,cAAeA,EACfC,yBAA0BA,IAE3BgC,EACE/B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC+B,EAAD,CAAMX,SAAUA,EAAUxB,cAAeA,gDCRlD,SAASoC,EAAYC,GACnB,OAAOA,EAAI,OA4IEC,cAxIb,SAAAA,EAAYvC,GAAO,IAAAwC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM3C,KACD+C,MAAQ,CACXC,iBAAkB,IAHHR,mFAQjBG,KAAKM,0DAGU,IAAAC,EAAAP,KACT/C,EAAM+C,KAAK3C,MAAMmD,gBAAgBC,aAC3B,OAARxD,GACFE,EAAaF,GAAKJ,KAAK,SAAA6D,GACrB,IAAMC,EAAoB,CAACD,EAAKE,MAAMC,QAAQ/C,MAC1CgD,EAAO,KACPC,EAAO,KAEPL,EAAKE,MAAMI,YAAcN,EAAKE,MAAMI,WAAWC,OAAS,IAC1DF,EAAOL,EAAKE,MAAMI,WAAW,GAAGH,QAAQ/C,KAGtC4C,EAAKE,MAAMI,WAAW,GAAGA,YACzBN,EAAKE,MAAMI,WAAW,GAAGA,WAAWC,OAAS,IAE7CH,EAAOJ,EAAKE,MAAMI,WAAW,GAAGA,WAAW,GAAGH,QAAQ/C,OAI7C,OAATiD,GACFJ,EAAkBO,KAAKH,GAEZ,OAATD,GACFH,EAAkBO,KAAKJ,GAGzBP,EAAKY,SAAS,CACZd,iBAAkBM,uCAMjB,IAAAS,EAC8BpB,KAAK3C,MAAlCkC,EADD6B,EACC7B,QAASiB,EADVY,EACUZ,gBACTH,EAAqBL,KAAKI,MAA1BC,iBACJgB,EAAgB,GAKpB,OAJAb,EAAgBc,UAAU7C,IAAI,SAAAC,GAC5B,OAAQ2C,GAAa,GAAAzE,OAAO8B,EAAK6C,QAAQzD,KAApB,QAIrBN,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACGjC,EACC/B,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAqB6C,EAAgB1C,OAErDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,qBACVY,IAAKiC,EAAgBpB,QAAQC,cAC7Bb,IAAKgC,EAAgB1C,OAGvBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACG8C,EAAgBnC,MAAMI,IAAI,SAAAC,GACzB,OACElB,EAAAC,EAAAC,cAAA,MACEC,UAAU,0BACVgB,IAAKD,EAAKb,KAAKC,MAEdY,EAAKb,KAAKC,KAAKc,mBAM1BpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,IAAiC6C,EAAgBzC,KAEnDP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,aAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,WAAAf,OACc8C,EAAYc,EAAgBiB,QAD1C,OAGAjE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,SAAAf,OACY8C,EAAYc,EAAgBkB,QADxC,QAGAlE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,gBAAAf,OACmByE,EAAcM,UAC7B,EACAN,EAAcJ,OAAS,MAI7BzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAd,iBAIFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,SAAI2C,EAAiB,IACrB7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQY,IAAKqD,IAAOpD,IAAI,WACvChB,EAAAC,EAAAC,cAAA,SAAI2C,EAAiB,IACpBA,EAAiB,GAChB7C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACEhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQY,IAAKqD,IAAOpD,IAAI,WACvChB,EAAAC,EAAAC,cAAA,SAAI2C,EAAiB,KAGvB,KAIN7C,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAG,KACP1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYY,IAAKsD,IAAWrD,IAAI,8BA3HnCsD,IAAMC,kBC8FjBC,cAhGb,SAAAA,EAAY3E,GAAO,IAAAwC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,IACjBnC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KAAM3C,KACD+C,MAAQ,CACXb,SAAS,EACTT,SAAU,GACVxB,cAAe,IAEjBuC,EAAKtC,yBAA2BsC,EAAKtC,yBAAyB0E,KAA9BnC,OAAAoC,EAAA,EAAApC,CAAAD,IAPfA,mFAWjBG,KAAKmC,gDAGK,IAAA5B,EAAAP,KACVtD,IAAUG,KAAK,SAAA6D,GACb,IACM0B,EADW1B,EAAK2B,QACO5D,IAAI,SAAAC,GAC/B,IAAI4D,EAAU,GACd,OAAOtF,EAAY0B,EAAKzB,KACrBJ,KAAK,SAAA0F,GAEJ,OADAD,EAAUC,EACHpF,EAAaoF,EAAc1B,QAAQ5D,OAE3CJ,KAAK,SAAA6D,GACJ,IAAM8B,EAAU9B,EAAK+B,qBAEhBH,EAAQhE,YADbkE,EAC2BA,EAAQ1E,KACR,GAE3B,IAAM4E,EAAiBhC,EAAKiC,gBAAgB1F,IAI5C,OAFKqF,EAAQ7B,aADbiC,GAE4B,GACrBJ,MAIbM,QAAQC,IAAIT,GAAavF,KAAK,SAAAiG,GAC5BvC,EAAKY,SAAS,CACZrC,SAAUgE,EACVvD,SAAS,yDAMQwD,GAAO,IACtB9E,EAAU8E,EAAMC,cAAhB/E,MACR+B,KAAKmB,SAAS,CACZ7D,cAAeW,qCAIV,IAAAgF,EAAAjD,KAAAkD,EACsClD,KAAKI,MAA1CtB,EADDoE,EACCpE,SAAUxB,EADX4F,EACW5F,cAAeiC,EAD1B2D,EAC0B3D,QACjC,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN9F,EAAAC,EAAAC,cAAC6F,EAAD,CACEzE,SAAUA,EACVxB,cAAeA,EACfC,yBAA0B0F,EAAK1F,yBAC/BgC,QAASA,OAIf/B,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEE,KAAK,sBACLC,OAAQ,SAAAE,GACN,OACEhG,EAAAC,EAAAC,cAAC+F,EAAD,CACEjD,gBAAiB1B,EAAS4E,KACxB,SAAAhF,GAAI,OACFA,EAAKX,KAAO4F,SAASH,EAAYI,MAAMC,OAAOC,aAElDhF,SAAUA,EACVS,QAASA,gBAtFTuC,IAAMC,WCHxBgC,IAAST,OACP9F,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACsG,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.7a8577ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.3ea90339.svg\";","module.exports = __webpack_public_path__ + \"static/media/back-arrow.a078cd7b.svg\";","const URL = \"https://pokeapi.co/api/v2/pokemon/\";\n\nconst getList = () => {\n  return fetch(`${URL}?limit=25`).then(res => res.json());\n};\nexport default getList;\n","const getPokemons = url => {\n  return fetch(url).then(response => response.json());\n};\nexport default getPokemons;\n","const getEvolution = url => {\n  return fetch(url).then(res => res.json());\n};\nexport default getEvolution;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = props => {\n  const { pokemonByName, handleChangeFilterByName } = props;\n  return (\n    <div className=\"Filter\">\n      <label htmlFor=\"byName\" className=\"Filter__label\">\n        BÃºsqueda\n      </label>\n      <input\n        className=\"Filter__input\"\n        type=\"text\"\n        name=\"byName\"\n        id=\"byName\"\n        placeholder=\"Filtra pokemons por nombre...\"\n        value={pokemonByName}\n        onChange={handleChangeFilterByName}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  pokemonByName: PropTypes.string.isRequired,\n  handleChangeFilterByName: PropTypes.func.isRequired\n};\n\nexport default Filter;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Card = props => {\n  const { imageSrc, name, id, types, evolvesFrom } = props;\n  return (\n    <div className=\"Card\">\n      <div className=\"Card__header\">\n        <img className=\"Card__image\" src={imageSrc} alt={name} />\n        <p className=\"Card__id\">ID / {id}</p>\n      </div>\n      <div className=\"Card__body\">\n        <h3 className=\"Card__name\">{name}</h3>\n        <div className=\"Card__types\">\n          <ul>\n          {types.map(item => {\n            return (\n              <li className=\"Card__types-type\" key={item.type.name}>\n                {item.type.name.toUpperCase()}\n              </li>\n            );\n          })}\n          </ul>\n        </div>\n        <h3 className=\"Card__evolution-title\">Evoluciona de:</h3>\n        <h4 className=\"Card__evolution-specie\">{evolvesFrom}</h4>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  imageSrc: PropTypes.string.isRequired,\n  types: PropTypes.arrayOf(PropTypes.object).isRequired,\n  evolvesFrom: PropTypes.string.isRequired\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport PropTypes from \"prop-types\";\nimport Card from \"../Card/index\";\nimport {Link} from 'react-router-dom';\n\nconst List = props => {\n  const { pokemons, pokemonByName } = props;\n  return (\n    <ul className=\"List\">\n      {pokemons\n        .filter(item => item.name.includes(pokemonByName))\n        .map(item => {\n          const { id, name, types, evolvesFrom } = item;\n          return (\n            <li className=\"List__item\" key={id}>\n              <Link to={`/pokemon/${id}`}>\n              <Card\n                name={name}\n                id={id}\n                imageSrc={item.sprites.front_default}\n                types={types}\n                evolvesFrom={evolvesFrom}\n              />\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nList.propTypes = {\n  pokemons: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pokemonByName: PropTypes.string.isRequired,\n};\n\nexport default List;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport PropTypes from \"prop-types\";\nimport Filter from \"../Filter/index\";\nimport List from \"../List/index\";\n\nconst Home = props => {\n  const { pokemonByName, handleChangeFilterByName, pokemons, loading } = props;\n  return (\n    <div className=\"Home\">\n      <Filter\n        pokemonByName={pokemonByName}\n        handleChangeFilterByName={handleChangeFilterByName}\n      />\n      {loading \n      ? (<p>Loading...</p>) \n      : (<List pokemons={pokemons} pokemonByName={pokemonByName} />)\n      }\n    </div>\n  );\n};\n\nHome.propTypes = {\n  pokemons: PropTypes.arrayOf(PropTypes.object).isRequired,\n  pokemonByName: PropTypes.string.isRequired,\n  handleChangeFilterByName: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport PropTypes from \"prop-types\";\nimport getEvolution from \"../../services/getEvolutionService\";\nimport arrow from \"../../images/arrow.svg\";\nimport backArrow from \"../../images/back-arrow.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction changeUnits(x) {\n  return x / 10;\n}\n\nclass PokemonPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      evolutionDetails: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchEvolution();\n  }\n\n  fetchEvolution() {\n    const url = this.props.selectedPokemon.evolutionUrl;\n    if (url !== null) {\n      getEvolution(url).then(data => {\n        const evolutionPokemons = [data.chain.species.name];\n        let evo2 = null;\n        let evo1 = null;\n\n        if (data.chain.evolves_to && data.chain.evolves_to.length > 0) {\n          evo1 = data.chain.evolves_to[0].species.name;\n\n          if (\n            data.chain.evolves_to[0].evolves_to &&\n            data.chain.evolves_to[0].evolves_to.length > 0\n          ) {\n            evo2 = data.chain.evolves_to[0].evolves_to[0].species.name;\n          }\n        }\n\n        if (evo1 !== null) {\n          evolutionPokemons.push(evo1);\n        }\n        if (evo2 !== null) {\n          evolutionPokemons.push(evo2);\n        }\n\n        this.setState({\n          evolutionDetails: evolutionPokemons\n        });\n      });\n    }\n  }\n\n  render() {\n    const { loading, selectedPokemon } = this.props;\n    const { evolutionDetails } = this.state;\n    let pokeAbilities = \"\";\n    selectedPokemon.abilities.map(item => {\n      return (pokeAbilities += `${item.ability.name}, `);\n    });\n\n    return (\n      <React.Fragment>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className=\"PokemonPage\">\n            <div className=\"PokemonPage__wrapper\">\n              <div className=\"PokemenPage__header\">\n                <h2 className=\"PokemonPage__name\">{selectedPokemon.name}</h2>\n              </div>\n              <div className=\"PokemonPage__body\">\n                <img\n                  className=\"PokemonPage__image\"\n                  src={selectedPokemon.sprites.front_default}\n                  alt={selectedPokemon.name}\n                />\n\n                <div className=\"PokemonPage__types\">\n                  <ul>\n                    {selectedPokemon.types.map(item => {\n                      return (\n                        <li\n                          className=\"PokemonPage__types-type\"\n                          key={item.type.name}\n                        >\n                          {item.type.name.toUpperCase()}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n                <p className=\"PokemonPage__id\">#{selectedPokemon.id}</p>\n              </div>\n              <div className=\"PokemonPage__profile-header\">\n                <h1 className=\"Pokemon__profile-title\">Detalles</h1>\n              </div>\n              <div className=\"PokemonPage__profile\">\n                <p className=\"PokemonPage__height\">\n                  {`Altura: ${changeUnits(selectedPokemon.height)} m`}\n                </p>\n                <p className=\"PokemonPage__weight\">\n                  {`Peso: ${changeUnits(selectedPokemon.weight)} kg`}\n                </p>\n                <p className=\"PokemonPage__abilities\">\n                  {`Habilidades: ${pokeAbilities.substring(\n                    0,\n                    pokeAbilities.length - 2\n                  )}`}\n                </p>\n              </div>\n              <div className=\"PokemonPage__evolution-header\">\n                <h1 className=\"PokemonPage__evolution-header-title\">\n                  EvoluciÃ³n\n                </h1>\n              </div>\n              <div className=\"PokemonCard__evolution\">\n                <p>{evolutionDetails[0]}</p>\n                <img className=\"arrow\" src={arrow} alt=\"flecha\" />\n                <p>{evolutionDetails[1]}</p>\n                {evolutionDetails[2] ? (\n                  <React.Fragment>\n                    <img className=\"arrow\" src={arrow} alt=\"flecha\" />\n                    <p>{evolutionDetails[2]}</p>\n                  </React.Fragment>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n            <Link to=\"/\">\n              <img className=\"backArrow\" src={backArrow} alt=\"Volver atrÃ¡s\" />\n            </Link>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nPokemonPage.propTypes = {\n  selectedPokemon: PropTypes.object,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default PokemonPage;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport getList from \"../../services/getListService\";\nimport getPokemons from \"../../services/getPokemonsService\";\nimport getEvolution from \"../../services/getEvolutionService\";\nimport Home from \"../Home/index\";\nimport PokemonPage from \"../PokemonPage/index\";\nimport { Switch, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      pokemons: [],\n      pokemonByName: \"\"\n    };\n    this.handleChangeFilterByName = this.handleChangeFilterByName.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchList();\n  }\n\n  fetchList() {\n    getList().then(data => {\n      const pokemons = data.results;\n      const pokemonData = pokemons.map(item => {\n        let pokemon = {};\n        return getPokemons(item.url)\n          .then(pokemonDetail => {\n            pokemon = pokemonDetail;\n            return getEvolution(pokemonDetail.species.url);\n          })\n          .then(data => {\n            const evolves = data.evolves_from_species;\n            evolves\n              ? (pokemon.evolvesFrom = evolves.name)\n              : (pokemon.evolvesFrom = \"\");\n\n            const evolutionChain = data.evolution_chain.url;\n            evolutionChain\n              ? (pokemon.evolutionUrl = evolutionChain)\n              : (pokemon.evolutionUrl = \"\");\n            return pokemon;\n          });\n      });\n\n      Promise.all(pokemonData).then(responses => {\n        this.setState({\n          pokemons: responses,\n          loading: false\n        });\n      });\n    });\n  }\n\n  handleChangeFilterByName(event) {\n    const { value } = event.currentTarget;\n    this.setState({\n      pokemonByName: value\n    });\n  }\n\n  render() {\n    const { pokemons, pokemonByName, loading } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"triangle-left\" />\n        <div className=\"triangle-right\" />\n        <div className=\"circle-left\" />\n        <div className=\"circle-right\" />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Home\n                pokemons={pokemons}\n                pokemonByName={pokemonByName}\n                handleChangeFilterByName={this.handleChangeFilterByName}\n                loading={loading}\n              />\n            )}\n          />\n          <Route\n            path=\"/pokemon/:pokemonId\"\n            render={routerProps => {\n              return (\n                <PokemonPage\n                  selectedPokemon={pokemons.find(\n                    item =>\n                      item.id === parseInt(routerProps.match.params.pokemonId)\n                  )}\n                  pokemons={pokemons}\n                  loading={loading}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"../src/components/App/index\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}